//File Generated By TelemetryFromXTCE.py

#ifndef COMMSTELEMETRYCONTAINER_H_
#define COMMSTELEMETRYCONTAINER_H_

#include "TelemetryContainer.h"

#define COMMS_CONTAINER_SIZE  37

class COMMSTelemetryContainer : public TelemetryContainer
{
protected:
unsigned char telemetry[COMMS_CONTAINER_SIZE];

public:
    virtual int size();
    virtual unsigned char * getArray();

    char getStatus();
    void setStatus(char var);

    char getBootCounter();
    void setBootCounter(char var);

    long getResetCause();
    void setResetCause(long var);

    unsigned long getUptime();
    void setUptime(unsigned long var);

    unsigned long getTotalUptime();
    void setTotalUptime(unsigned long var);

    char getVersionNumber();
    void setVersionNumber(char var);

    short getMCUTemp();
    void setMCUTemp(short var);

    bool getINAStatus();
    void setINAStatus(bool var);

    bool getTMPStatus();
    void setTMPStatus(bool var);

    bool getTransmitINAStatus();
    void setTransmitINAStatus(bool var);

    bool getAmplifierINAStatus();
    void setAmplifierINAStatus(bool var);

    bool getPhasingTMPStatus();
    void setPhasingTMPStatus(bool var);

    bool getAmplifierTMPStatus();
    void setAmplifierTMPStatus(bool var);

    short getVoltage();
    void setVoltage(short var);

    short getCurrent();
    void setCurrent(short var);

    short getTemperature();
    void setTemperature(short var);

    short getReceiverRSSI();
    void setReceiverRSSI(short var);

    short getTransmitVoltage();
    void setTransmitVoltage(short var);

    short getTransmitCurrent();
    void setTransmitCurrent(short var);

    short getAmplifierVoltage();
    void setAmplifierVoltage(short var);

    short getAmplifierCurrent();
    void setAmplifierCurrent(short var);

    short getPhasingTemperature();
    void setPhasingTemperature(short var);

    short getAmplifierTemperature();
    void setAmplifierTemperature(short var);

};

#endif /* COMMSTELEMETRYCONTAINER_H_ */
